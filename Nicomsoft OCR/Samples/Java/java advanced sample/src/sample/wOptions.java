/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sample;
import  NSOCR.*;
import  javax.swing.*;
import  java.util.*;
/**
 *
 * @author Now
 */
public class wOptions extends javax.swing.JDialog {
    public HCFG CfgObj;
    /**
     * Creates new form wOptions
     */
    public wOptions(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public void Init(HCFG pCfgObj)
    {
      CfgObj = pCfgObj;
      
      StringBuffer val = new StringBuffer("");
      NSOCR.Engine.Cfg_GetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "Zoning/FindBarcodes", val);
      cbFindBarcodes.setSelected("1".equalsIgnoreCase(val.toString()));

      NSOCR.Engine.Cfg_GetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "ImgAlizer/Inversion", val);
      cbImgInversion.setSelected("2".equalsIgnoreCase(val.toString()));

      NSOCR.Engine.Cfg_GetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "Zoning/DetectInversion", val);
      cbZonesInversion.setSelected("1".equalsIgnoreCase(val.toString()));

      NSOCR.Engine.Cfg_GetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "ImgAlizer/SkewAngle", val);
      cbDeskew.setSelected("360".equalsIgnoreCase(val.toString()));

      NSOCR.Engine.Cfg_GetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "ImgAlizer/AutoRotate", val);
      cbRotation.setSelected("1".equalsIgnoreCase(val.toString()));

      NSOCR.Engine.Cfg_GetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "ImgAlizer/NoiseFilter", val);
      cbImgNoiseFilter.setSelected("1".equalsIgnoreCase(val.toString()));

      NSOCR.Engine.Cfg_GetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "PixLines/RemoveLines", val);
      cbRemoveLines.setSelected("1".equalsIgnoreCase(val.toString()));

      NSOCR.Engine.Cfg_GetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "Main/GrayMode", val);
      cbGrayMode.setSelected("1".equalsIgnoreCase(val.toString()));

      NSOCR.Engine.Cfg_GetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "Main/FastMode", val);
      cbFastMode.setSelected("1".equalsIgnoreCase(val.toString()));

      NSOCR.Engine.Cfg_GetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "Binarizer/BinTwice", val);
      cbBinTwice.setSelected("1".equalsIgnoreCase(val.toString()));

      NSOCR.Engine.Cfg_GetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "Main/EnabledChars", val);
      edEnabledChars.setText(val.toString());

      NSOCR.Engine.Cfg_GetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "Main/DisabledChars", val);
      edDisabledChars.setText(val.toString());

      NSOCR.Engine.Cfg_GetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "Binarizer/SimpleThr", val);
      edBinThreshold.setText(val.toString());

      NSOCR.Engine.Cfg_GetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "WordAlizer/TextQual", val);
      edTextQual.setText(val.toString());

      NSOCR.Engine.Cfg_GetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "Main/PdfDPI", val);
      edPDFDPI.setText(val.toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbFindBarcodes = new javax.swing.JCheckBox();
        cbImgInversion = new javax.swing.JCheckBox();
        cbZonesInversion = new javax.swing.JCheckBox();
        cbDeskew = new javax.swing.JCheckBox();
        cbRotation = new javax.swing.JCheckBox();
        cbImgNoiseFilter = new javax.swing.JCheckBox();
        cbRemoveLines = new javax.swing.JCheckBox();
        cbGrayMode = new javax.swing.JCheckBox();
        cbFastMode = new javax.swing.JCheckBox();
        cbBinTwice = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        edEnabledChars = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        edDisabledChars = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        edBinThreshold = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        edTextQual = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        edPDFDPI = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        bkOK = new javax.swing.JButton();
        bkCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cbFindBarcodes.setText("Find barcodes");

        cbImgInversion.setText("Detect image inversion");

        cbZonesInversion.setText("Detect zones inversion");

        cbDeskew.setText("Detect and fix image skew");

        cbRotation.setText("Detect and fix image rotation 90/180/270 degrees");

        cbImgNoiseFilter.setText("Apply noise filter for image");

        cbRemoveLines.setText("Detect and remove lines");

        cbGrayMode.setText("Gray mode");

        cbFastMode.setText("Fast mode (less accurate)");

        cbBinTwice.setText("Binarize twice");

        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("You can improve OCR performance by selecting only necessary features.");

        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Check \"Configuration\" and \"Performance Tips\" sections of documentation for more options.");

        jLabel3.setText("Enabled chars:");

        jLabel4.setText("Disabled chars:");

        jLabel5.setText("Binarization threshold (0..254; 255 - auto):");

        jLabel6.setText("Text quality (0..100; -1 - auto):");

        jLabel7.setText("PDF rendering DPI:");

        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("NOTE: Some options will not be applied immediately, reload image to apply all changes.");

        bkOK.setText("OK");
        bkOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bkOKActionPerformed(evt);
            }
        });

        bkCancel.setText("Cancel");
        bkCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bkCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbRemoveLines)
                            .addComponent(cbDeskew)
                            .addComponent(cbZonesInversion)
                            .addComponent(cbImgInversion)
                            .addComponent(jLabel2)
                            .addComponent(cbFindBarcodes)
                            .addComponent(jLabel1)
                            .addComponent(cbImgNoiseFilter)
                            .addComponent(cbFastMode)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(16, 16, 16)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(edDisabledChars, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                                    .addComponent(edEnabledChars)))
                            .addComponent(cbRotation)
                            .addComponent(cbGrayMode)
                            .addComponent(cbBinTwice)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(edPDFDPI, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(edTextQual, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(edBinThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel8)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(bkOK, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bkCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbFindBarcodes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbImgInversion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbZonesInversion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbDeskew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbRotation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbImgNoiseFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbRemoveLines)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbGrayMode)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbFastMode)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbBinTwice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(edEnabledChars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(edDisabledChars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(edBinThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(edTextQual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(edPDFDPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bkOK)
                    .addComponent(bkCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bkCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bkCancelActionPerformed
       this.dispose();
    }//GEN-LAST:event_bkCancelActionPerformed

    private void bkOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bkOKActionPerformed
      
      StringBuffer val = new StringBuffer("");
      
      if (cbFindBarcodes.isSelected()) val.append("1");
      else val.append(0);     
      NSOCR.Engine.Cfg_SetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "Zoning/FindBarcodes", val.toString());
      val.setLength(0);

      if (cbImgInversion.isSelected()) val.append("2");
      else val.append("0");
      NSOCR.Engine.Cfg_SetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "ImgAlizer/Inversion", val.toString());
      val.setLength(0);

      if (cbZonesInversion.isSelected()) val.append("1");
      else val.append("0");
      NSOCR.Engine.Cfg_SetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "Zoning/DetectInversion", val.toString());
      val.setLength(0);

      if (cbDeskew.isSelected()) val.append("360");
      else val.append("0");
      NSOCR.Engine.Cfg_SetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "ImgAlizer/SkewAngle", val.toString());
      val.setLength(0);

      if (cbRotation.isSelected()) val.append("1");
       else val.append("0");
      NSOCR.Engine.Cfg_SetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "ImgAlizer/AutoRotate", val.toString());
      val.setLength(0);
      
      if (cbImgNoiseFilter.isSelected()) val.append("1");
      else val.append("0");
      NSOCR.Engine.Cfg_SetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "ImgAlizer/NoiseFilter", val.toString());
      val.setLength(0);
      
      if (cbRemoveLines.isSelected()) val.append("1");
      else val.append("0");
      
      NSOCR.Engine.Cfg_SetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "PixLines/RemoveLines", val.toString());
      NSOCR.Engine.Cfg_SetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "PixLines/FindHorLines", val.toString());
      NSOCR.Engine.Cfg_SetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "PixLines/FindVerLines", val.toString());
      val.setLength(0);
      
      if (cbGrayMode.isSelected()) val.append("1");
      else val.append("0");
      NSOCR.Engine.Cfg_SetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "Main/GrayMode", val.toString());
      val.setLength(0);
      
      if (cbFastMode.isSelected()) val.append("1");
      else val.append("0");
      NSOCR.Engine.Cfg_SetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "Main/FastMode", val.toString());
      val.setLength(0);
      
      if (cbBinTwice.isSelected()) val.append("1");
      else val.append("0");    
      NSOCR.Engine.Cfg_SetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "Binarizer/BinTwice", val.toString());
      val.setLength(0);
      
      NSOCR.Engine.Cfg_SetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "Main/EnabledChars", edEnabledChars.getText());
      NSOCR.Engine.Cfg_SetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "Main/DisabledChars", edDisabledChars.getText());
      NSOCR.Engine.Cfg_SetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "Binarizer/SimpleThr", edBinThreshold.getText());
      NSOCR.Engine.Cfg_SetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "WordAlizer/TextQual", edTextQual.getText());
      NSOCR.Engine.Cfg_SetOption(CfgObj, NSOCR.Constant.BT_DEFAULT, "Main/PdfDPI", edPDFDPI.getText());          
      
      //*/
      this.dispose();
    }//GEN-LAST:event_bkOKActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bkCancel;
    private javax.swing.JButton bkOK;
    private javax.swing.JCheckBox cbBinTwice;
    private javax.swing.JCheckBox cbDeskew;
    private javax.swing.JCheckBox cbFastMode;
    private javax.swing.JCheckBox cbFindBarcodes;
    private javax.swing.JCheckBox cbGrayMode;
    private javax.swing.JCheckBox cbImgInversion;
    private javax.swing.JCheckBox cbImgNoiseFilter;
    private javax.swing.JCheckBox cbRemoveLines;
    private javax.swing.JCheckBox cbRotation;
    private javax.swing.JCheckBox cbZonesInversion;
    private javax.swing.JTextField edBinThreshold;
    private javax.swing.JTextField edDisabledChars;
    private javax.swing.JTextField edEnabledChars;
    private javax.swing.JTextField edPDFDPI;
    private javax.swing.JTextField edTextQual;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    // End of variables declaration//GEN-END:variables
}
